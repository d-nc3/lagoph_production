"use strict";(function(){const addEventListeners=(element,events,handler)=>{events.forEach((event)=>element.addEventListener(event,handler))};const updateCalculations=()=>{const shareFrequency=parseInt(document.getElementById("shareFrequency").value,10)||0;const amount=parseInt(document.getElementById("shareAmount").value,10)||0;const contributionAmount=parseInt(document.getElementById("contributionAmount").value,10)||0;const tableBody=document.getElementById("tableBody");if(!tableBody)return;tableBody.innerHTML="";const totalCapitalContribution=shareFrequency*amount;let remainingBalance=totalCapitalContribution-contributionAmount;for(let i=0;i<shareFrequency;i++){const currentAmount=amount;remainingBalance=Math.max(0,remainingBalance-amount);const row=document.createElement("tr");row.innerHTML=`
                <td>${currentAmount}</td>
                <td><p>${i + 1}</p></td>
                <td><p>${remainingBalance.toFixed(2)}</p></td>`;tableBody.appendChild(row);if(remainingBalance===0)break}
updateDOM(totalCapitalContribution,remainingBalance,contributionAmount)};const updateDOM=(totalCapitalContribution,remainingBalance,contributionAmount)=>{const balance=totalCapitalContribution-contributionAmount;document.getElementById("totalContribution").value=totalCapitalContribution.toFixed(2);document.getElementById("total_capital_contribution").textContent=totalCapitalContribution.toFixed(2);document.getElementById("balance").textContent=balance.toFixed(2);document.getElementById("total").textContent=balance.toFixed(2);document.getElementById("total-1").textContent=balance.toFixed(2);document.getElementById("total-2").textContent=balance.toFixed(2)};const initCalculationListeners=()=>{const elements=[document.getElementById("shareFrequency"),document.getElementById("shareAmount"),document.getElementById("contributionAmount"),];elements.forEach((element)=>{if(element){addEventListeners(element,["input","change"],updateCalculations)}})};const quotationValidation=document.querySelector("#quotation-checkout");if(typeof quotationValidation!=="undefined"&&quotationValidation!==null){const form=quotationValidation.querySelector("#quotation-checkout-form");const quotationValidationFormStep1=form.querySelector("#quotation-details"),quotationValidationFormStep2=form.querySelector("#quotation-payment");const quotationValidationNext=[].slice.call(form.querySelectorAll(".btn-next")),quotationValidationPrev=[].slice.call(form.querySelectorAll(".btn-prev"));const validationStepper=new Stepper(quotationValidation,{linear:!0,animation:!0,});const FormValidation1=FormValidation.formValidation(quotationValidationFormStep1,{fields:{share_frequency:{validators:{notEmpty:{message:"This field is required",},},},share_amount:{validators:{notEmpty:{message:"This field is required",},},},contribution_amount:{validators:{notEmpty:{message:"This field is required",},callback:{message:"Invalid Amount",callback:function(input){const value=input.value;if(value>=1000){return!0}
return!1},},},},},plugins:{trigger:new FormValidation.plugins.Trigger(),bootstrap5:new FormValidation.plugins.Bootstrap5({eleValidClass:"",}),autoFocus:new FormValidation.plugins.AutoFocus(),submitButton:new FormValidation.plugins.SubmitButton(),},init:(instance)=>{instance.on("plugins.message.placed",function(e){if(e.element.parentElement.classList.contains("input-group")){e.element.parentElement.insertAdjacentElement("afterend",e.messageElement)}})},}).on("core.form.valid",function(){validationStepper.next()});const FormValidation2=FormValidation.formValidation(quotationValidationFormStep2,{fields:{terms_checkbox:{validators:{notEmpty:{message:"This field is required",},},},},plugins:{trigger:new FormValidation.plugins.Trigger(),bootstrap5:new FormValidation.plugins.Bootstrap5({eleValidClass:"",}),autoFocus:new FormValidation.plugins.AutoFocus(),submitButton:new FormValidation.plugins.SubmitButton(),},init:(instance)=>{instance.on("plugins.message.placed",function(e){if(e.element.parentElement.classList.contains("input-group")){e.element.parentElement.insertAdjacentElement("afterend",e.messageElement)}})},}).on("core.form.valid",function(){showBlockUI();$.ajax({url:`${BASE_URL}Invoice_capital_contribution/generate_billing_capital`,type:"POST",async:!0,data:new FormData(form),contentType:!1,cache:!1,processData:!1,dataType:"json",success:function(response){hideBlockUI();if(response.status){Swal.fire({text:response.message,icon:"success",buttonsStyling:!1,confirmButtonText:"Ok, got it!",customClass:{confirmButton:"btn fw-bold btn-primary",},}).then(()=>{window.location.reload()})}else{if(Object.keys(response.validation_errors).length>0){let html='<div class="text-start">Please check the following fields:</br>';html+="<ol>";$.each(response.validation_errors,function(key,value){html+="<li><b>"+value.label+"</b> : "+value.message+"</li>"});html+="</ol></div>";Swal.fire({title:response.message,icon:"error",html:html,showCloseButton:!0,showCancelButton:!0,focusConfirm:!0,showCancelButton:!1,confirmButtonText:"Ok, got it!",customClass:{confirmButton:"btn fw-bold btn-primary",},buttonsStyling:!1,})}else{Swal.fire({text:response.message,icon:"error",buttonsStyling:!1,confirmButtonText:"Ok, got it!",customClass:{confirmButton:"btn btn-primary",},})}}},error:function(error){hideBlockUI();Swal.fire({text:"Sorry, looks like there are some errors detected, please try again.",icon:"error",buttonsStyling:!1,confirmButtonText:"Ok, got it!",customClass:{confirmButton:"btn btn-primary",},})},})});quotationValidationNext.forEach((item)=>{item.addEventListener("click",(event)=>{switch(validationStepper._currentIndex){case 0:FormValidation1.validate();break;case 1:FormValidation2.validate();break;default:break}})})}})()